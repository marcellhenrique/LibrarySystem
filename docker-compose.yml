services:
  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=library_system
      - POSTGRES_USER=library_user
      - POSTGRES_PASSWORD=library_password
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U library_user -d library_system"]
      interval: 10s
      timeout: 5s
      retries: 5

  web:
    build: .
    command: >
      bash -c "python manage.py migrate &&
               python manage.py collectstatic --noinput &&
               gunicorn config.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - .:/app
      - static_files:/app/staticfiles
    ports:
      - "8000:8000"
    environment:
      - DEBUG=1
      - DOCKER_CONTAINER=true
      - POSTGRES_DB=library_system
      - POSTGRES_USER=library_user
      - POSTGRES_PASSWORD=library_password
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - SECRET_KEY=your-secret-key-here
      - ALLOWED_HOSTS=localhost,127.0.0.1
    depends_on:
      db:
        condition: service_healthy

volumes:
  postgres_data:
  static_files:
